<?xml version="1.0" encoding="UTF-8"?>
<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="engineer.echo.plugin.mvvm.prefs.PrefsForm">
  <grid id="27dc6" binding="prefsPanel" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
    <margin top="0" left="0" bottom="0" right="0"/>
    <constraints>
      <xy x="20" y="20" width="500" height="3417"/>
    </constraints>
    <properties/>
    <border type="none"/>
    <children>
      <tabbedpane id="d0b8a" default-binding="true">
        <constraints>
          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
        </constraints>
        <properties/>
        <border type="none"/>
        <children>
          <grid id="bcc0b" layout-manager="GridLayoutManager" row-count="2" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="0" left="0" bottom="0" right="0"/>
            <constraints>
              <tabbedpane title="settings"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="e46e1" class="javax.swing.JLabel">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
                </constraints>
                <properties>
                  <text value="BaseActivity"/>
                </properties>
              </component>
              <vspacer id="e12d7">
                <constraints>
                  <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
                </constraints>
              </vspacer>
              <component id="28bbc" class="javax.swing.JTextField" binding="baseActivityField">
                <constraints>
                  <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="8" fill="1" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="-1"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="androidx.appcompat.app.AppCompatActivity"/>
                </properties>
              </component>
            </children>
          </grid>
          <grid id="12431" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="10" left="10" bottom="10" right="10"/>
            <constraints>
              <tabbedpane title="versions"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="27726" class="javax.swing.JTextPane" binding="versionField">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="50"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="// versions.gradle&#10;&#10;private static def addRepos(RepositoryHandler handler) {&#10;    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }&#10;    handler.maven { url 'https://dl.bintray.com/thelasterstar/maven/' }&#10;    handler.jcenter()&#10;    handler.google()&#10;    handler.maven { url 'https://jitpack.io' }&#10;}&#10;&#10;ext {&#10;    addRepos = this.&amp;addRepos&#10;    getPropertyVal = this.&amp;getPropertyVal&#10;    localProperties = this.&amp;localProperties&#10;    currentTime = this.&amp;currentTime&#10;    modulePlugin = this.&amp;modulePlugin&#10;    moduleAction = this.&amp;moduleAction&#10;&#10;    app = [&#10;            id     : &quot;engineer.echo.study&quot;,&#10;            verCode: 1,&#10;            verName: &quot;0.0.1&quot;&#10;    ]&#10;&#10;    android = [&#10;            compileSdkVersion : 28,&#10;            minSdkVersion     : 21,&#10;            targetSdkVersion  : 28,&#10;            renderscriptTarget: 24,&#10;    ]&#10;&#10;    build = [&#10;            gradleX    : 'com.android.tools.build:gradle:3.3.2',&#10;            kotlinX    : &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61&quot;,&#10;            kotlinLib  : &quot;org.jetbrains.kotlin:kotlin-stdlib:1.3.61&quot;,&#10;            happyMaven : &quot;engineer.echo:happymaven:0.0.4&quot;,&#10;            autoService: 'com.google.auto.service:auto-service:1.0-rc4',&#10;            javapoet   : 'com.squareup:javapoet:1.12.1'&#10;    ]&#10;&#10;    debugKey = [&#10;            storeFile    : file('./debug.keystore'),&#10;            storePassword: &quot;android&quot;,&#10;            keyAlias     : &quot;androiddebugkey&quot;,&#10;            keyPassword  : &quot;android&quot;&#10;    ]&#10;&#10;    HappyMaven = [&#10;            &quot;GROUP_ID&quot;         : &quot;engineer.echo&quot;,&#10;            &quot;PACKAGING&quot;        : &quot;aar&quot;,&#10;            &quot;LICENSE_NAME&quot;     : &quot;The Apache Software License, Version 2.0&quot;,&#10;            &quot;LICENSE_URL&quot;      : &quot;http://www.apache.org/licenses/LICENSE-2.0.txt&quot;,&#10;            &quot;LICENSE_DIST&quot;     : &quot;repo&quot;,&#10;            &quot;DEVELOPER_ID&quot;     : &quot;pluckypan&quot;,&#10;            &quot;DEVELOPER_NAME&quot;   : &quot;Plucky Pan&quot;,&#10;            &quot;RELEASE_REPO_URL&quot; : &quot;https://oss.sonatype.org/service/local/staging/deploy/maven2/&quot;,&#10;            &quot;SNAPSHOT_REPO_URL&quot;: &quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;,&#10;            &quot;NEXUS_USER_NAME&quot;  : NEXUS_USER_NAME,&#10;            &quot;NEXUS_PASSWORD&quot;   : NEXUS_PASSWORD&#10;    ]&#10;&#10;    androidx = [&#10;            ktx             : 'androidx.core:core-ktx:1.2.0-alpha01',&#10;            coroutineAndroid: &quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3&quot;,&#10;            appcompat       : 'androidx.appcompat:appcompat:1.1.0',&#10;            constraintlayout: 'androidx.constraintlayout:constraintlayout:1.1.3',&#10;            recyclerview    : 'androidx.recyclerview:recyclerview:1.0.0-alpha1',&#10;            lifecycleExt    : 'android.arch.lifecycle:extensions:2.0.0'&#10;    ]&#10;&#10;    protoBuf = [&#10;            java      : &quot;com.google.protobuf:protobuf-java:3.6.1&quot;,&#10;            plugin    : &quot;com.google.protobuf&quot;,&#10;            gradle    : &quot;com.google.protobuf:protobuf-gradle-plugin:0.8.10&quot;,&#10;            compile   : &quot;com.google.protobuf:protoc:3.1.0&quot;,&#10;            javaFormat: &quot;com.googlecode.protobuf-java-format:protobuf-java-format:1.2&quot;,&#10;            javaUtil  : &quot;com.google.protobuf:protobuf-java-util:3.6.0&quot;&#10;    ]&#10;&#10;    workManager = [&#10;            runtime : &quot;android.arch.work:work-runtime:1.0.0-alpha01&quot;,&#10;            firebase: &quot;android.arch.work:work-firebase:1.0.0-alpha01&quot;,&#10;            testing : &quot;android.arch.work:work-testing:1.0.0-alpha01&quot;&#10;    ]&#10;&#10;    room = [&#10;            compiler: &quot;android.arch.persistence.room:compiler:2.2.0&quot;,&#10;            runtime : &quot;android.arch.persistence.room:runtime:2.2.0&quot;,&#10;            rxjava2 : &quot;android.arch.persistence.room:rxjava2:2.2.0&quot;,&#10;            testing : &quot;android.arch.persistence.room:testing:2.2.0&quot;&#10;    ]&#10;&#10;    framework = [&#10;            oneActivity    : &quot;engineer.echo.oneactivity:core:0.0.1&quot;,&#10;            autoFlowLayout : &quot;com.github.LRH1993:AutoFlowLayout:1.0.5&quot;,&#10;            easyPermissions: &quot;pub.devrel:easypermissions:3.0.0&quot;,&#10;            viewAnimator   : &quot;com.github.florent37:viewanimator:1.1.0&quot;,&#10;            liveBus        : &quot;com.jeremyliao:live-event-bus-x:1.4.4&quot;,&#10;            mmkv           : &quot;com.tencent:mmkv:1.0.22&quot;,&#10;            workManager    : workManager,&#10;            room           : room,&#10;            rxAndroid      : &quot;io.reactivex.rxjava2:rxandroid:2.0.1&quot;,&#10;            videocache     : &quot;com.danikula:videocache:2.7.1&quot;&#10;    ]&#10;&#10;    support = [&#10;            annotations: &quot;com.android.support:support-annotations:27.1.1&quot;&#10;    ]&#10;&#10;    widget = [&#10;            syntaxView           : &quot;com.github.Badranh:Syntax-View-Android:0.1.5&quot;,&#10;            sectionedRecyclerview: &quot;com.truizlop.sectionedrecyclerview:library:1.2.0&quot;,&#10;            rangeBar             : &quot;com.github.Greymamba:Rangebar:1.2.1&quot;,&#10;            gravitySnapHelper    : &quot;com.github.rubensousa:gravitysnaphelper:1.5&quot;,&#10;            lottie               : &quot;com.airbnb.android:lottie:3.3.1&quot;,&#10;            smartRefreshLayout   : &quot;com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-16&quot;,&#10;            smartRefreshHeader   : &quot;com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-16&quot;&#10;    ]&#10;&#10;    glide = [&#10;            runtime        : &quot;com.github.bumptech.glide:glide:4.11.0&quot;,&#10;            compiler       : &quot;com.github.bumptech.glide:compiler:4.11.0&quot;,&#10;            integration    : &quot;com.github.bumptech.glide:recyclerview-integration:4.7.1&quot;,&#10;            transformations: &quot;jp.wasabeef:glide-transformations:3.3.0&quot;&#10;    ]&#10;&#10;    retrofit = [&#10;            runtime           : &quot;com.squareup.retrofit2:retrofit:2.7.0&quot;,&#10;            gsonConverter     : &quot;com.squareup.retrofit2:converter-gson:2.7.0&quot;,&#10;            loggingInterceptor: &quot;com.squareup.okhttp3:logging-interceptor:3.9.0&quot;,&#10;            rxJava2Adapter    : &quot;com.squareup.retrofit2:adapter-rxjava2:2.7.0&quot;&#10;    ]&#10;&#10;    consumer = [&#10;            // last 9.12.0&#10;            weibo: &quot;com.sina.weibo.sdk:core:4.4.3:openDefaultRelease@aar&quot;&#10;    ]&#10;&#10;    test = [&#10;            junit   : &quot;junit:junit:4.12&quot;,&#10;            runner  : &quot;androidx.test:runner:1.1.0-alpha4&quot;,&#10;            espresso: &quot;androidx.test.espresso:espresso-core:3.1.0-alpha4&quot;&#10;    ]&#10;}&#10;&#10;def static currentTime() {&#10;    return new Date().format(&quot;yyyyMMddHHmmss&quot;, TimeZone.getTimeZone(&quot;GMT+08:00&quot;))&#10;}&#10;&#10;def localProperties(key, defaultVal) {&#10;    Properties properties = new Properties()&#10;    if (project.rootProject.file('local.properties').exists()) {&#10;        properties.load(project.rootProject.file('local.properties').newDataInputStream())&#10;        return properties.getProperty(key, defaultVal)&#10;    } else {&#10;        return null&#10;    }&#10;}&#10;&#10;def getPropertyVal(key, defVal = &quot;&quot;) {&#10;    def local = localProperties(key, defVal)&#10;    if (local != null &amp;&amp; local.length() &gt; 0) {&#10;        return local&#10;    } else if (System.getProperty(key)) {&#10;        return System.getProperty(key)&#10;    } else if (project.hasProperty(key)) {&#10;        return project.getProperty(key)&#10;    } else {&#10;        return defVal&#10;    }&#10;}&#10;&#10;def modulePlugin(id) {&#10;    // 等于 true 表示参与合包编译&#10;    if (&quot;${localProperties(id, &quot;true&quot;)}&quot; == &quot;false&quot;) {&#10;        return &quot;com.android.application&quot;&#10;    } else {&#10;        return &quot;com.android.library&quot;&#10;    }&#10;}&#10;&#10;def moduleAction(id) {&#10;    // 等于 true 表示参与合包编译&#10;    if (&quot;${localProperties(id, &quot;true&quot;)}&quot; == &quot;false&quot;) {&#10;        return &quot;android.intent.action.MAIN&quot;&#10;    } else {&#10;        return &quot;android.intent.action.${id}&quot;&#10;    }&#10;}&#10;&#10;"/>
                </properties>
              </component>
            </children>
          </grid>
          <grid id="eab51" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="10" left="10" bottom="10" right="10"/>
            <constraints>
              <tabbedpane title="project"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="90ffa" class="javax.swing.JTextPane" binding="projectField">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="50"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="// project build.gradle&#10;&#10;buildscript {&#10;&#10;    apply from: 'versions.gradle'&#10;    addRepos(repositories)&#10;    dependencies {&#10;        classpath build.gradleX&#10;        classpath build.kotlinX&#10;        classpath protoBuf.gradle&#10;        classpath build.happyMaven&#10;    }&#10;}&#10;&#10;allprojects {&#10;    addRepos(repositories)&#10;}&#10;&#10;task clean(type: Delete) {&#10;    delete rootProject.buildDir&#10;}&#10;"/>
                </properties>
              </component>
            </children>
          </grid>
          <grid id="13185" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="10" left="10" bottom="10" right="10"/>
            <constraints>
              <tabbedpane title="app"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="15e2a" class="javax.swing.JTextPane" binding="appField">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="50"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="// app build.gradle&#10;&#10;apply plugin: 'com.android.application'&#10;apply plugin: 'kotlin-android'&#10;apply plugin: 'kotlin-android-extensions'&#10;apply plugin: 'kotlin-kapt'&#10;&#10;android {&#10;    compileSdkVersion rootProject.ext.android.compileSdkVersion&#10;&#10;    defaultConfig {&#10;        applicationId &quot;engineer.echo.yi&quot;&#10;        minSdkVersion rootProject.ext.android.minSdkVersion&#10;        targetSdkVersion rootProject.ext.android.targetSdkVersion&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;        multiDexEnabled = true&#10;&#10;        //各个模块化Modular无法使用 kapt 需要添加如下配置解决&#10;        javaCompileOptions {&#10;            annotationProcessorOptions {&#10;                includeCompileClasspath = true&#10;                arguments = [&#10;                        &quot;room.schemaLocation&quot;: &quot;$rootDir/schemas&quot;.toString() // Room 输出文件夹&#10;                ]&#10;            }&#10;        }&#10;        manifestPlaceholders = [&#10;                NETWORK_SECURITY_CONFIG: &quot;@xml/network_security_config&quot; // 默认网络安全配置&#10;        ]&#10;        ndk {&#10;            //设置支持的SO库架构&#10;            abiFilters 'armeabi', 'armeabi-v7a', 'x86'&#10;        }&#10;    }&#10;&#10;    dataBinding {&#10;        enabled = true&#10;    }&#10;&#10;    androidExtensions {&#10;        experimental = true&#10;    }&#10;&#10;    compileOptions {&#10;        incremental true // 增量编译&#10;        sourceCompatibility JavaVersion.VERSION_1_8&#10;        targetCompatibility JavaVersion.VERSION_1_8&#10;    }&#10;&#10;    packagingOptions {&#10;        // pickFirst '**/xxx.so'&#10;        // exclude 'lib/arm64-v8a/xxx.so'&#10;    }&#10;&#10;    repositories {&#10;        flatDir {&#10;            dirs 'libs'&#10;        }&#10;    }&#10;&#10;    signingConfigs {&#10;        def storeFilePath = getPropertyVal('StoreFile', &quot;null&quot;)&#10;        release {&#10;            storeFile file(storeFilePath)&#10;            storePassword getPropertyVal('StorePassword')&#10;            keyAlias getPropertyVal('KeyAlias')&#10;            keyPassword getPropertyVal('KeyPassword')&#10;            v2SigningEnabled true&#10;            println(&quot;storeFile = $storeFilePath&quot;)&#10;        }&#10;        debug {&#10;            storeFile rootProject.debugKey.storeFile&#10;            storePassword rootProject.debugKey.storePassword&#10;            keyAlias rootProject.debugKey.keyAlias&#10;            keyPassword rootProject.debugKey.keyPassword&#10;        }&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled true&#10;            signingConfig signingConfigs.release&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;            resValue &quot;string&quot;, &quot;build_time&quot;, &quot;release_${currentTime()}&quot;&#10;        }&#10;        debug {&#10;            minifyEnabled false&#10;            debuggable true&#10;            signingConfig signingConfigs.debug&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;            resValue &quot;string&quot;, &quot;build_time&quot;, &quot;debug_${currentTime()}&quot;&#10;        }&#10;    }&#10;&#10;    buildTypes.each {&#10;        it.buildConfigField(&quot;String&quot;, &quot;BAIDU_AK&quot;, &quot;\&quot;${getPropertyVal(&quot;baiduAk&quot;)}\&quot;&quot;)&#10;    }&#10;&#10;    sourceSets {&#10;        main {&#10;            jniLibs.srcDirs = ['libs']&#10;        }&#10;    }&#10;&#10;    lintOptions {&#10;        abortOnError false&#10;    }&#10;&#10;    configurations.all {&#10;        resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;&#10;            def requested = details.requested&#10;            if (requested.group == 'com.android.support') {&#10;                if (requested.name == 'support-v4') {&#10;                    // details.useVersion &quot;&quot;&#10;                }&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;def getImpl(id) {&#10;    if (modulePlugin(id) == &quot;com.android.library&quot;) {&#10;        return &quot;:yi:${id}&quot;&#10;    } else {&#10;        return &quot;&quot;&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation fileTree(include: ['*.jar'], dir: 'libs')&#10;&#10;    // modules&#10;    implementation project(&quot;:yi:common&quot;)&#10;    // 模块编译&#10;    [getImpl(&quot;consumer&quot;), getImpl(&quot;im&quot;), getImpl(&quot;live&quot;), getImpl(&quot;producer&quot;)].each {&#10;        if (it != null &amp;&amp; it.length() &gt; 0) {&#10;            implementation project(it)&#10;        }&#10;    }&#10;&#10;    // kapt&#10;    kapt rootProject.ext.glide.compiler&#10;    kapt project(':compiler')&#10;&#10;    // test&#10;    testImplementation rootProject.ext.test.junit&#10;    androidTestImplementation rootProject.ext.test.runner&#10;    androidTestImplementation rootProject.ext.test.espresso&#10;}&#10;"/>
                </properties>
              </component>
            </children>
          </grid>
          <grid id="b7e53" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="10" left="10" bottom="10" right="10"/>
            <constraints>
              <tabbedpane title="common"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="412db" class="javax.swing.JTextPane" binding="commonField">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="50"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="// common build.gradle&#10;&#10;apply plugin: 'com.android.library'&#10;apply plugin: 'kotlin-android'&#10;apply plugin: 'kotlin-android-extensions'&#10;apply plugin: 'kotlin-kapt'&#10;&#10;android {&#10;    resourcePrefix &quot;common_&quot;&#10;    compileSdkVersion rootProject.ext.android.compileSdkVersion&#10;    defaultConfig {&#10;        minSdkVersion rootProject.ext.android.minSdkVersion&#10;        targetSdkVersion rootProject.ext.android.targetSdkVersion&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        javaCompileOptions {&#10;            annotationProcessorOptions {&#10;                includeCompileClasspath = true&#10;            }&#10;        }&#10;&#10;        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;&#10;    compileOptions {&#10;        incremental true // 增量编译&#10;        sourceCompatibility JavaVersion.VERSION_1_8&#10;        targetCompatibility JavaVersion.VERSION_1_8&#10;    }&#10;}&#10;&#10;dependencies {&#10;    api fileTree(dir: 'libs', include: ['*.jar'])&#10;&#10;    // build&#10;    api rootProject.ext.build.kotlinLib&#10;    // androidx&#10;    api rootProject.ext.androidx.appcompat&#10;    api rootProject.ext.androidx.ktx&#10;    api rootProject.ext.androidx.constraintlayout&#10;    api rootProject.ext.androidx.recyclerview&#10;    api rootProject.ext.androidx.lifecycleExt&#10;    // framework&#10;    api rootProject.ext.framework.videocache&#10;    // glide&#10;    api rootProject.ext.glide.runtime&#10;    api rootProject.ext.glide.transformations&#10;    kapt rootProject.ext.glide.compiler&#10;    // widget&#10;    api rootProject.ext.widget.gravitySnapHelper&#10;    api rootProject.ext.widget.lottie&#10;    api rootProject.ext.widget.smartRefreshLayout&#10;    api rootProject.ext.widget.smartRefreshHeader&#10;&#10;    // modules&#10;    api project(':easylib')&#10;    api project(':easyapi')&#10;    kapt project(':compiler')&#10;&#10;    // test&#10;    testImplementation rootProject.ext.test.junit&#10;    androidTestImplementation rootProject.ext.test.runner&#10;    androidTestImplementation rootProject.ext.test.espresso&#10;}"/>
                </properties>
              </component>
            </children>
          </grid>
          <grid id="f971e" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
            <margin top="0" left="0" bottom="0" right="0"/>
            <constraints>
              <tabbedpane title="module"/>
            </constraints>
            <properties/>
            <border type="none"/>
            <children>
              <component id="4db57" class="javax.swing.JTextPane" binding="moduleField">
                <constraints>
                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false">
                    <preferred-size width="150" height="50"/>
                  </grid>
                </constraints>
                <properties>
                  <text value="apply plugin: modulePlugin(&quot;consumer&quot;)&#10;apply plugin: 'kotlin-android'&#10;apply plugin: 'kotlin-android-extensions'&#10;apply plugin: 'kotlin-kapt'&#10;&#10;android {&#10;    resourcePrefix 'consumer_'&#10;    compileSdkVersion rootProject.ext.android.compileSdkVersion&#10;&#10;    defaultConfig {&#10;        minSdkVersion rootProject.ext.android.minSdkVersion&#10;        targetSdkVersion rootProject.ext.android.targetSdkVersion&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;        multiDexEnabled = true&#10;&#10;        javaCompileOptions {&#10;            annotationProcessorOptions {&#10;                includeCompileClasspath = true&#10;            }&#10;        }&#10;        //各模块单独添加&#10;        manifestPlaceholders = [&#10;                MODULE_ACTION: moduleAction(&quot;consumer&quot;) as String&#10;        ]&#10;    }&#10;&#10;    dataBinding {&#10;        enabled = true&#10;    }&#10;&#10;    androidExtensions {&#10;        experimental = true&#10;    }&#10;&#10;    compileOptions {&#10;        incremental true // 增量编译&#10;        sourceCompatibility JavaVersion.VERSION_1_8&#10;        targetCompatibility JavaVersion.VERSION_1_8&#10;    }&#10;&#10;    repositories {&#10;        flatDir {&#10;            dirs 'libs'&#10;        }&#10;    }&#10;&#10;    signingConfigs {&#10;        debug {&#10;            storeFile rootProject.debugKey.storeFile&#10;            storePassword rootProject.debugKey.storePassword&#10;            keyAlias rootProject.debugKey.keyAlias&#10;            keyPassword rootProject.debugKey.keyPassword&#10;        }&#10;    }&#10;&#10;    buildTypes {&#10;        debug {&#10;            debuggable true&#10;            minifyEnabled false&#10;            signingConfig signingConfigs.debug&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;&#10;    lintOptions {&#10;        abortOnError false&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation fileTree(include: ['*.jar'], dir: 'libs')&#10;&#10;    // weibo&#10;    implementation rootProject.ext.consumer.weibo&#10;&#10;    // modules&#10;    implementation project(&quot;:yi:common&quot;)&#10;    // kapt&#10;    kapt rootProject.ext.glide.compiler&#10;    kapt project(':compiler')&#10;&#10;    // test&#10;    testImplementation rootProject.ext.test.junit&#10;    androidTestImplementation rootProject.ext.test.runner&#10;    androidTestImplementation rootProject.ext.test.espresso&#10;}&#10;"/>
                </properties>
              </component>
            </children>
          </grid>
        </children>
      </tabbedpane>
    </children>
  </grid>
</form>
