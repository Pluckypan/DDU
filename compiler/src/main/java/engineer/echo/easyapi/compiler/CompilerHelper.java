package engineer.echo.easyapi.compiler;

import com.squareup.javapoet.FieldSpec;
import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;

import java.io.IOException;

import javax.annotation.processing.Filer;
import javax.lang.model.element.Modifier;

import engineer.echo.easyapi.annotation.EasyJobHelper;


final class CompilerHelper {

    static boolean createMetaInfoFile(Filer filer, String appId, String uniqueId, String className) {
        // appId
        FieldSpec fieldAppId = FieldSpec.builder(String.class, "APP_ID")
                .addModifiers(Modifier.PUBLIC, Modifier.FINAL, Modifier.STATIC)
                .initializer("$S", appId)
                .build();

        // metaInfo
        FieldSpec metaInfo = FieldSpec.builder(String.class, "metaInfo")
                .addModifiers(Modifier.FINAL, Modifier.STATIC, Modifier.PUBLIC)
                .initializer("$S", className)
                .build();

        // metaInfo
        FieldSpec fieldId = FieldSpec.builder(String.class, "uniqueId")
                .addModifiers(Modifier.FINAL, Modifier.STATIC, Modifier.PUBLIC)
                .initializer("$S", uniqueId)
                .build();

        // class
        TypeSpec classType = TypeSpec.classBuilder(EasyJobHelper.CLASS)
                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)
                .addField(metaInfo)
                .addField(fieldAppId)
                .addField(fieldId)
                .build();
        // file
        JavaFile javaFile = JavaFile.builder(EasyJobHelper.generatePackage(uniqueId), classType)
                .addFileComment("This codes are generated by EasyApi automatically. Do not modify!")
                .build();
        try {
            javaFile.writeTo(filer);
            return true;
        } catch (IOException e) {
            return false;
        }
    }
}
